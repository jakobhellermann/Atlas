import { VerticalBox, ProgressIndicator, StandardButton, CheckBox, Slider, SpinBox, HorizontalBox, ScrollView } from "std-widgets.slint";

export enum TasRecordingState {
    Prepare,
    Running,
    DoneSuccess,
    DoneError,
}

export component TasRecording inherits VerticalBox {
    in property <[string]> paths: ["2a.tas", "3a.tas"];
    in property <float> progress <=> progress.progress;
    in property <string> status-text <=> status.text;
    in property <TasRecordingState> state;

    property <float> fastforward-speed: 500.0;
    property <bool> run-as-merged: false;

    callback record-tases([string], float, bool);
    callback ok;
    callback abort;

    alignment: stretch;

    Text {
        font-size: 16pt;
        text: "Record TASes";
        wrap: word-wrap;
    }

    progress := ProgressIndicator {
        height: 5px;
    }

    status := Text {
        wrap: word-wrap;
    }

    if state == TasRecordingState.Prepare: VerticalLayout {
        spacing: 8px;

        ScrollView {
            max-height: 200px;
            preferred-height: 0px;
            VerticalLayout {
                for path in paths: HorizontalLayout {
                    Text {
                        text: "- " + path;
                    }
                }
            }
        }

        HorizontalLayout {
            alignment: start;
            spacing: 8px;

            Text {
                vertical-alignment: center;
                text: "Fastforward Speed";
            }

            SpinBox {
                value: fastforward-speed;

                edited(val) => {
                    fastforward-speed = val
                }
            }
        }

        HorizontalLayout {
            alignment: start;
            spacing: 8px;

            Text {
                vertical-alignment: center;
                text: "Run as merged file (can be faster but more prone to breaking)";
            }

            CheckBox {
                checked: run-as-merged;

                toggled => {
                    run-as-merged = self.checked
                }
            }
        }
    }

    Rectangle {
        visible: false;
        vertical-stretch: 1;
    }

    if state == TasRecordingState.Prepare: Dialog {
        Text {
            text: "";
        }

        StandardButton {
            kind: StandardButtonKind.cancel;
            clicked => {
                ok()
            }
        }

        StandardButton {
            kind: StandardButtonKind.ok;
            clicked => {
                record-tases(paths, fastforward-speed, run-as-merged);
            }
        }
    }
    if state == TasRecordingState.Running: Dialog {
        Text {
            text: "";
        }

        StandardButton {
            kind: StandardButtonKind.abort;
            clicked => {
                abort()
            }
        }

        StandardButton {
            enabled: false;
            kind: StandardButtonKind.ok;
        }
    }
    if state == TasRecordingState.DoneSuccess: Dialog {
        Text {
            text: "";
        }

        StandardButton {
            kind: StandardButtonKind.ok;
            clicked => {
                ok();
            }
        }
    }
    if state == TasRecordingState.DoneError: Dialog {
        Text {
            text: "";
        }

        StandardButton {
            kind: StandardButtonKind.retry;
            clicked => {
                record-tases(paths, fastforward-speed, run-as-merged);
            }
        }

        StandardButton {
            kind: StandardButtonKind.ok;
            clicked => {
                ok();
            }
        }
    }
}
